[Unit]
Description=Open /dev/%I per cryptsetup
Documentation=https://github.com/Olf0/crypto-sdcard
DefaultDependencies=no
After=systemd-udevd.service systemd-udev-trigger.service dev-%i.device systemd-journald.service local-fs.target cryptsetup-pre.target
Requisite=dev-%i.device
PartOf=mount-cryptosd-plain@%i.service cryptsetup.target
Conflicts=umount.target shutdown.target actdead.target factory-test.target
Before=umount.target shutdown.target mount-cryptosd-plain@%i.service
AssertPathIsDirectory=!/etc/crypto-sdcard/crypto_plain_%I.key
AssertPathExists=/etc/crypto-sdcard/crypto_plain_%I.key

[Service]
Type=oneshot
RemainAfterExit=yes
EnvironmentFile=/etc/systemd/system/cryptosd.conf
EnvironmentFile=-/etc/crypto-sdcard/cryptosd.conf
EnvironmentFile=-/etc/crypto-sdcard/cryptosd@%I.conf
# For devices, which need the qcrypto kernel module loaded to support modern cryptographic
# schemes as e.g. XTS:
ExecStartPre=/sbin/modprobe qcrypto
# With workaround for https://github.com/systemd/systemd/issues/14560 :
StandardInput=file:/etc/crypto-sdcard/crypto_plain_%I.key
StandardOutput=journal
# "udisksctl unlock --key-file" does only work with LUKS "containers", not with "plain" ones,
# thus call cryptsetup directly:
ExecStart=/usr/sbin/cryptsetup -d - -o ${CRYPTO_PLAIN_OFFSET} -h ${CRYPTO_PLAIN_PASSPHRASE_HASH} -s ${CRYPTO_PLAIN_KEYLENGTH} -c ${CRYPTO_PLAIN_CIPHER} --allow-discards --type plain open /dev/%I %I
ExecStop=/usr/sbin/cryptsetup close %I

