[Unit]
Description=Open /dev/disk/by-uuid/%I per cryptsetup
Documentation=https://github.com/Olf0/crypto-sdcard
DefaultDependencies=no
After=systemd-udevd.service systemd-udev-trigger.service dev-disk-by\x2duuid-%i.device systemd-journald.service local-fs.target cryptsetup-pre.target
Requisite=dev-disk-by\x2duuid-%i.device
PartOf=mount-cryptosd-luks@%i.service cryptsetup.target
Conflicts=umount.target shutdown.target actdead.target factory-test.target
Before=umount.target shutdown.target mount-cryptosd-luks@%i.service
ConditionPathIsDirectory=!/etc/crypto-sdcard/crypto_luks_%I.key
ConditionPathExists=/etc/crypto-sdcard/crypto_luks_%I.key

[Service]
Type=oneshot
RemainAfterExit=yes
# For devices, which need the qcrypto kernel module loaded to support modern cryptographic
# schemes as e.g. XTS:
# ExecStartPre=/sbin/modprobe qcrypto
# For various reasons (avoid (temporal) dependency on udisks2, allow for discards etc.), do
# not use "udisksctl unlock --key-file", instead call cryptsetup directly:
ExecStart=/usr/sbin/cryptsetup --allow-discards -d /etc/crypto-sdcard/crypto_luks_%I.key luksOpen /dev/disk/by-uuid/%I %I ; /bin/sleep 1
# "udisksctl mount" (in mount-cryptosd-luks@.service) sometimes fails when issued right after
# "udisksd" (per "udisks2.service") has finished starting, because the udisks object for this
# unlocked device has not been created yet.
# Hence one might give udisksd a second to recognise the fresh device, before starting units
# dependent on this unit instance and "udisks2.service" / "udisksd".  Side note: Letting
# dependent units sleep for a second by an "ExecStartPre=/bin/sleep 1" in them would
# unnecessarily waste this second most of the time; that is avoided this way.
# Note that using ExecStartPost= for this is futile (as irrelevant for dependencies, see
# https://www.freedesktop.org/software/systemd/man/systemd.service.html#Type= ), but (only)
# units of the Type=oneshot may use multiple ExecStart= lines (which are *started
# concurrently*, but the last one is displayed as "main process") and / or commands in an
# ExecStart= line.  Side note: For non-oneshot units a solution is to move the ExecStart=
# command to ExecStartPre= (that is *functionally equivalent*, but again displays the
# ExecStart= command as "main process") and use ExecStart=/bin/sleep 1
ExecStop=/usr/sbin/cryptsetup close %I

