[Unit]
Description=Open %I per cryptsetup
Documentation=https://github.com/Olf0/crypto-sdcard
DefaultDependencies=no
After=sysinit.target dev-%i.device
Requisite=dev-%i.device
Requires=sysinit.target
Conflicts=umount.target shutdown.target actdead.target factory-test.target
Before=umount.target shutdown.target mount-cryptosd-luks@%i.service
# That would allow this unit to keep on running, when switching to e.g., rescue.target
# (but never for the SFOS recovery!).  While having an unlocked device around should be
# harmless, disable it as long as benefits and potential consequences for the SFOS updater
# are not properly evaluated:
# IgnoreOnIsolate=true
AssertFileNotEmpty=/etc/crypto-sdcard/%I.key

[Service]
Type=oneshot
RemainAfterExit=yes
# For devices, which need the qcrypto kernel module loaded to support modern cryptographic
# schemes as e.g. XTS:
ExecStartPre=/sbin/modprobe qcrypto
# For various reasons (avoid (temporal) dependency on udisks2, allow for discards etc.), do
# not use "udisksctl unlock --key-file", instead call cryptsetup directly:
ExecStart=/usr/sbin/cryptsetup --allow-discards -d /etc/crypto-sdcard/%I.key luksOpen /dev/%I %I
# "udisksctl mount" (in mount-cryptosd-luks@.service) sometimes fails when issued right after
# this unit (instance) and "udisksd" (per "udisks2.service") have finished starting, because
# the udisks object for this unlocked device has not been created yet.
# Hence one might give udisksd a second to recognise the fresh device, before starting units
# dependent on this unit instance and "udisks2.service" / "udisksd".  Side note: Letting
# dependent units sleep for a second by an "ExecStartPre=/bin/sleep 1" in them would
# unnecessarily waste this second most of the time; that is avoided this way.
# Note that using ExecStartPost= for this is futile (as irrelevant for dependencies, see
# https://www.freedesktop.org/software/systemd/man/systemd.service.html#Type= ), but (only)
# units of the Type=oneshot may use multiple ExecStart= lines and / or commands.  Side note:
# For non-oneshot units a solution is to move the ExecStart= command to ExecStartPre= (that
# is functionally equivalent!) and ...
ExecStart=/bin/sleep 1
ExecStop=/usr/sbin/cryptsetup close %I

